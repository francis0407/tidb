[
  {
    "Name": "TestPushLimitDownIndexLookUpReader",
    "Cases": [
      {
        "SQL": "explain select * from tbl use index(idx_b_c) where b > 1 limit 2,1",
        "Plan": [
          "IndexLookUp_14 1.00 root limit embedded(offset:2, count:1)",
          "├─Limit_13 3.00 cop[tikv] offset:0, count:3",
          "│ └─IndexScan_11 3.00 cop[tikv] table:tbl, index:b, c, range:(1,+inf], keep order:false",
          "└─TableScan_12 1.00 cop[tikv] table:tbl, keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from tbl use index(idx_b_c) where b > 1 order by b desc limit 2,1",
        "Plan": [
          "Projection_25 1.00 root Column#1, Column#2, Column#3",
          "└─IndexLookUp_24 1.00 root limit embedded(offset:2, count:1)",
          "  ├─Limit_23 3.00 cop[tikv] offset:0, count:3",
          "  │ └─IndexScan_21 3.00 cop[tikv] table:tbl, index:b, c, range:(1,+inf], keep order:true, desc",
          "  └─TableScan_22 1.00 cop[tikv] table:tbl, keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from tbl use index(idx_b_c) where b > 1 and c > 1 limit 2,1",
        "Plan": [
          "IndexLookUp_15 1.00 root limit embedded(offset:2, count:1)",
          "├─Limit_14 3.00 cop[tikv] offset:0, count:3",
          "│ └─Selection_13 3.00 cop[tikv] gt(Column#3, 1)",
          "│   └─IndexScan_11 3.75 cop[tikv] table:tbl, index:b, c, range:(1,+inf], keep order:false",
          "└─TableScan_12 1.00 cop[tikv] table:tbl, keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from tbl use index(idx_b_c) where b > 1 and a > 1 limit 2,1",
        "Plan": [
          "Limit_9 1.00 root offset:2, count:1",
          "└─IndexLookUp_15 3.00 root ",
          "  ├─IndexScan_11 3.75 cop[tikv] table:tbl, index:b, c, range:(1,+inf], keep order:false",
          "  └─Limit_14 3.00 cop[tikv] offset:0, count:3",
          "    └─Selection_13 3.00 cop[tikv] gt(Column#1, 1)",
          "      └─TableScan_12 3.75 cop[tikv] table:tbl, keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestIsFromUnixtimeNullRejective",
    "Cases": [
      {
        "SQL": "explain select * from t t1 left join t t2 on t1.a=t2.a where from_unixtime(t2.b);",
        "Plan": [
          "HashLeftJoin_8 9990.00 root inner join, inner:Selection_13, equal:[eq(Column#1, Column#4)]",
          "├─TableReader_12 9990.00 root data:Selection_11",
          "│ └─Selection_11 9990.00 cop[tikv] not(isnull(Column#1))",
          "│   └─TableScan_10 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "└─Selection_13 7992.00 root from_unixtime(cast(Column#5))",
          "  └─TableReader_16 9990.00 root data:Selection_15",
          "    └─Selection_15 9990.00 cop[tikv] not(isnull(Column#4))",
          "      └─TableScan_14 10000.00 cop[tikv] table:t2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestSimplifyOuterJoinWithCast",
    "Cases": [
      {
        "SQL": "explain select * from t t1 left join t t2 on t1.a = t2.a where cast(t1.b as date) >= '2019-01-01'",
        "Plan": [
          "HashLeftJoin_9 10000.00 root left outer join, inner:Selection_10 (REVERSED), equal:[eq(Column#1, Column#4)]",
          "├─Selection_10 8000.00 root ge(cast(Column#2), 2019-01-01 00:00:00.000000)",
          "│ └─TableReader_12 10000.00 root data:TableScan_11",
          "│   └─TableScan_11 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "└─TableReader_14 10000.00 root data:TableScan_13",
          "  └─TableScan_13 10000.00 cop[tikv] table:t2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestPartitionTableStats",
    "Cases": [
      {
        "SQL": "explain select * from t",
        "Result": [
          "Union_8 20005.00 root ",
          "├─TableReader_10 10000.00 root data:TableScan_9",
          "│ └─TableScan_9 10000.00 cop[tikv] table:t, partition:p0, range:[-inf,+inf], keep order:false, stats:pseudo",
          "├─TableReader_12 5.00 root data:TableScan_11",
          "│ └─TableScan_11 5.00 cop[tikv] table:t, partition:p1, range:[-inf,+inf], keep order:false",
          "└─TableReader_14 10000.00 root data:TableScan_13",
          "  └─TableScan_13 10000.00 cop[tikv] table:t, partition:p2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from t",
        "Result": [
          "11 1",
          "12 2",
          "13 3",
          "14 4",
          "15 5"
        ]
      },
      {
        "SQL": "explain select * from t limit 3",
        "Result": [
          "Limit_19 3.00 root offset:0, count:3",
          "└─Union_20 3.00 root ",
          "  ├─Limit_21 3.00 root offset:0, count:3",
          "  │ └─TableReader_26 3.00 root data:Limit_25",
          "  │   └─Limit_25 3.00 cop[tikv] offset:0, count:3",
          "  │     └─TableScan_24 3.00 cop[tikv] table:t, partition:p0, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  ├─Limit_29 3.00 root offset:0, count:3",
          "  │ └─TableReader_34 3.00 root data:Limit_33",
          "  │   └─Limit_33 3.00 cop[tikv] offset:0, count:3",
          "  │     └─TableScan_32 3.00 cop[tikv] table:t, partition:p1, range:[-inf,+inf], keep order:false",
          "  └─Limit_37 3.00 root offset:0, count:3",
          "    └─TableReader_42 3.00 root data:Limit_41",
          "      └─Limit_41 3.00 cop[tikv] offset:0, count:3",
          "        └─TableScan_40 3.00 cop[tikv] table:t, partition:p2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from t limit 3",
        "Result": [
          "11 1",
          "12 2",
          "13 3"
        ]
      }
    ]
  }
]
